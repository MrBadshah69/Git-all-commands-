        <!---(GIT COMMANDS LIST)--->

    <!---|Configuration|--->

<!--- Config User --->
$ git config --global user.name "MrBadshah69"
<!--- Config gmail --->
$ git config --global user.gmail "mrbadshahbusiness@gmail.com"
<!--- Config Pass --->
$ git config --global user.pass "chal b_s_d_k"
<!--- Config List --->
$ git config --list

    <!--- |Status| --->

<!---   git status 4 type 
        Untracked =>File New
        Modified =>Change
        Staged =>ready to (commit and add) 
        Unmodified => uncommited    --->
<!---Check status--->
$ git status
<!---Check status (Shorthand)--->
$ git status -s

    <!---|initializetion|--->

$ git init

    <!---|Files Adding|-->

<!---Add Single File--->
$ git add "File Name"
<!---Add all files--->
$ git add .
$ git add -a

    <!---|Files Commit|--->

<!---Commit by vm without any Branch Name--->
$ git commit
<!---commit (Shorthand)--->
$ git commit -m "message_here"
<!---commit and adding Files But Use second time (Shorthand)--->
$ git commit -a -m "message_here"

    <!---|Remote|--->

<!---Add to remote repo--->
$ git remote and origin master <repo_link_here>
<!---Check to remote repo--->
$ git remote -v
<!---To changing Url For a remote repo --->
git set-url origin "repo_link_link"

    <!---|Push|--->
<!---For push in the Branch--->
$ git push origin "BranchNameHere"
<!---Push Shorthand Use for first time only--->
$ git push -u origin "BranchNameHere"
<!---For Always Use --->
$ git push

    <!---|Clone|---> 
<!---Download and clone--->
$ git clone "Repo_link_here"
<!---Specific Branch Download and clone--->
$ git clone -b "br" "repo_link_here"

    <!---|Checkout Files|--->
<!---Recover / Discard for a single file form the last commit --->
$ git checkout "HereFileName"
<!---Recover / Discard for a single file form the last commit --->
$ git checkout -file

    <!---|Log|--->
<!---For view all commit --->
$ git log 
<!---For view all Specific Log --->
$ git log -p -1

    <!---diff--->
<!---to compare the working dir to the stage area--->
$ git diff
<!---to compare the stage area to the working dir --->
$ git diff --staged

    <!---|remove files|--->
<!---to compare the working dir to the stage area--->
$ git rm
<!---to compare the stage area to the working dir --->
$ git rm --cached "FileNameHere"

    <!---|Branch|--->
<!---Check created branches--->
$ git branch
<!---rename branch name (M is only capital)--->
$ git branch -M  "BranchName"
<!---Navigate to a branch --->
$ git checkout "BranchNameHere"
<!--- Create a new branch --->
$ git checkout -b "NewBranchNameHere"
<!--- use for Delete branch --->
$ git checkout -d "Branch Name"

    <!---||--->